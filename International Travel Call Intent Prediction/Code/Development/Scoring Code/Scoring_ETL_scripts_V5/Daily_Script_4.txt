drop TABLE  VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_CUST_ETHNICITY;

CREATE  TABLE  VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_CUST_ETHNICITY 
AS 
SELECT DISTINCT CUST_ID,ACCT_NUM,CUST_LINE_SEQ_ID,MTN,ETHNICITY_SEGMT 
FROM VZW_UDA_PRD_ALLVM.SUBS_SUM_FACT_V 
WHERE RPT_MTH = TO_DATE('2020-02-01 00:00:00') 
AND ENDING_CUSTOMERS = 1 
AND VSN_CUST_TYPE_CD = 'PE' 
AND REV_GEN_IND = 'Y';

Comments: Table is being used to capture active customers a the start of the month
------------------------------------------------------------------------------------
drop table  vzw_soi_prd_tbls.itp_sad_cust_dly_one_msg;

create  table  vzw_soi_prd_tbls.itp_sad_cust_dly_one_msg
as
select
v.cust_id,v.cust_line_seq_id,v.acct_num,v.mtn,v.msg_date,v.msg_timestamp,v.topic,v.Alert_Type,
ROW_NUMBER() OVER (PARTITION BY  v.CUST_ID,v.ACCT_NUM,v.MTN,v.cust_line_seq_id
ORDER BY v.MSG_TIMESTAMP DESC) AS MSG_SEQ
from
(select * from 
(SELECT distinct 
cust_id,cust_line_seq_id,acct_num,mtn,document_submit_dt as msg_date,
CONCAT(document_submit_dt,' ',document_submit_tm) as msg_timestamp,
sms_reqt_type as topic,
CASE when  lower(sms_reqt_type) like '%travel%' then 'TP_SMS' 
when  lower(sms_reqt_type) like '%international%' or lower(sms_reqt_type) like '%intl%' then 'International_SMS' 
when  lower(sms_reqt_type) like '%bill%' or lower(sms_reqt_type) like '%payment%' then 'BILL_SMS' 
when  lower(sms_reqt_type) like '%data%'  then 'Data_SMS' 
when  lower(sms_reqt_type) like '%daypass%'  then 'Daypass_SMS' 
when  lower(sms_reqt_type) like '%dial%' then 'settings' 
else 'Other_SMS' end as Alert_Type 
FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_ONEMSG_SMS_SUMMARY )a 
where a.Alert_Type !='Other_SMS')v
WHERE v.msg_date >=date_sub(current_date(),7);

Comments: This table is created to capture the alerts in the past 7 days related to international (Other_SMS)

------------------Date conditions for the below tables-------------------------
For example : if current month Feb 2020


ITP_SAD_INTER_CALL_CUST_ETHNICITY - first of current month (Feb 2020)
ITP_SAD_CALLS_TRVL_SEQ_FINAL - current month always (Feb 2020)
VZW_UDA_PRD_ALLVM.CUST_ACCT_LINE_V - current month  (Feb 2020)
VZSOI_SEMANTIC_BILL_SUMMARY - current month (Feb2020), and last 2 months
VZSOI_SEMANTIC_DATA_USAGE - last month (Jan 2020)
VZW_CJA_PRD_ALLVM.SOI_DNA_V - last month  (Jan 2020)

------------------------------------------------------------------------------



DROP TABLE  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS;

CREATE  TABLE  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS
AS
SELECT A.* FROM (
SELECT A.*,
ROW_NUMBER() OVER (PARTITION BY  A.CUST_ID,A.ACCT_NUM,A.MTN ORDER BY  A.BILL_CYCLE_DT DESC) AS BILL_SEQ
FROM (
SELECT
A.CUST_ID,A.ACCT_NUM,H.CUST_LINE_SEQ_ID,
A.MTN, A.IVR_CALL_ID,A.CALL_START_TM_STMP ,
H.BILL_CYCLE_DT , H.PYMNT_DUE_DT, H.FEAT_AMT,
H.PREV_DUE_AMT,H.PYMNT_RECVD_AMT  , H.PYMNT_REVRS_AMT ,
H.BILL_BAL_AMT, H.LATE_PYMNT_CHRG_AMT , H.OCC_AMT,
H.BILL_CURR_AMT , H.BILL_TOT_AMT , H.BILL_30_DAY_AMT,
H.BILL_90_DAY_AMT ,H.BILL_180_DAY_AMT , H.BILL_CYCLE_IND ,
H.BILL_6_MTH_AVG,H.CYC_MTH_YR
FROM
(select distinct * from (
select 
A.*,B.IVR_CALL_ID,B.CALL_START_TM_STMP
FROM 
VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL AS A
LEFT OUTER JOIN 
(SELECT * FROM VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALLS_DRIVER_STRING_SEQ_INT1 WHERE CALL_SEQ=1)AS B
ON A.CUST_ID=B.CUST_ID
AND A.ACCT_NUM=B.ACCT_NUM
AND A.CUST_LINE_SEQ_ID=B.CUST_LINE_SEQ_ID
AND A.MTN=B.MTN
) as A
) as A
LEFT OUTER JOIN
(SELECT
H.CUST_ID,H.ACCT_NUM,H.MTN,H.CUST_LINE_SEQ_ID,
H.BILL_CYCLE_DT , H.PYMNT_DUE_DT, H.FEAT_AMT, H.PREV_DUE_AMT,
H.PYMNT_RECVD_AMT  , H.PYMNT_REVRS_AMT , H.BILL_BAL_AMT,
H.LATE_PYMNT_CHRG_AMT , H.OCC_AMT, H.BILL_CURR_AMT , H.BILL_TOT_AMT ,
H.BILL_30_DAY_AMT, H.BILL_90_DAY_AMT , H.BILL_180_DAY_AMT ,
H.BILL_CYCLE_IND , H.BILL_6_MTH_AVG,H.CYC_MTH_YR
FROM
(SELECT H.*
FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_BILL_SUMMARY H
WHERE CYC_MTH_YR='202002') AS H) AS H
ON A.CUST_ID =H.CUST_ID
AND A.ACCT_NUM = H.ACCT_NUM
AND A.MTN =H.MTN
where  H.BILL_CYCLE_DT < current_date()
) AS A
) AS A
WHERE BILL_SEQ=1;

Comments :Current month billing column details for the mtn
------------------------------------------------------------------------------------

DROP TABLE  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS;

CREATE  TABLE  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS
AS
SELECT A.* FROM (
SELECT A.*,
ROW_NUMBER() OVER (PARTITION BY  A.CUST_ID,A.ACCT_NUM,A.MTN ORDER BY  A.TRANS_DT DESC) AS BILL_SEQ
FROM (
SELECT
A.CUST_ID,A.ACCT_NUM,A.MTN,H.CUST_LINE_SEQ_ID,
A.IVR_CALL_ID,A.CALL_START_TM_STMP ,
H.OCC_CDV ,
H.OCC_AMTV, H.OCC_TYPE_CDV, H.OCC_DESC ,H.occ_reasons,
H.TRANS_DT,H.AGG_OCC_VALUE,H.CYC_MTH_YR
FROM
(select distinct * from (
select 
A.*,B.IVR_CALL_ID,B.CALL_START_TM_STMP
FROM 
VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL AS A
LEFT OUTER JOIN 
(SELECT * FROM VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALLS_DRIVER_STRING_SEQ_INT1 WHERE CALL_SEQ=1)AS B
ON A.CUST_ID=B.CUST_ID
AND A.ACCT_NUM=B.ACCT_NUM
AND A.CUST_LINE_SEQ_ID=B.CUST_LINE_SEQ_ID
AND A.MTN=B.MTN
) as A
) as A
LEFT OUTER JOIN
(SELECT
H.CUST_ID,H.ACCT_NUM,H.MTN,H.CUST_LINE_SEQ_ID,
H.BILL_CYCLE_DT ,
H.OCC_CDV ,
H.OCC_AMTV,
H.OCC_TYPE_CDV,
H.OCC_DESC ,H.AGG_OCC_VALUE,H.CYC_MTH_YR,
CASE WHEN lower(H.occ_desc) like '%TRAVELPASS%' THEN 'occ_trvlpass'
                when lower(H.occ_desc) like '%intl trv%' or lower(H.occ_desc) like '%intl call%' or lower(H.occ_desc) like '%int tvl%' or  lower(H.occ_desc) like '%international%' then 'International_charges'
                when lower(H.occ_desc) like '%can%' or lower(H.occ_desc) like'%mex%' or lower(H.occ_desc) like '%can/mex%' or lower(H.occ_desc) like '%cn/mx%' then 'CAN_MEX_CHARGES'
                when lower(H.occ_desc) like '%roam%' then 'ROAMING'
                when lower(H.occ_desc) like '%int%' or lower(H.occ_desc) like '%high speed%' then 'data_usg_charges'
                else 'General_reasons' end as occ_reasons,
H.TRANS_DT
FROM
(SELECT H.*
FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_BILL_SUMMARY H
WHERE CYC_MTH_YR='202002')AS H ) as H
ON A.CUST_ID =H.CUST_ID
AND A.ACCT_NUM = H.ACCT_NUM
AND A.MTN =H.MTN
where  H.TRANS_DT < current_date()
) AS A
) AS A
WHERE BILL_SEQ=1;

Comments: Current month occ column details for the mtn
--------------------------------------------------------------------------------------

DROP TABLE  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS_PREV_MTH;

CREATE  TABLE  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS_PREV_MTH
AS
SELECT A.* FROM (
SELECT A.*,
ROW_NUMBER() OVER (PARTITION BY  A.CUST_ID,A.ACCT_NUM,A.MTN ORDER BY  A.BILL_CYCLE_DT DESC) AS BILL_SEQ
FROM (
SELECT
A.CUST_ID,A.ACCT_NUM,H.CUST_LINE_SEQ_ID,
A.MTN, A.IVR_CALL_ID,A.CALL_START_TM_STMP ,
H.BILL_CYCLE_DT , H.PYMNT_DUE_DT, H.FEAT_AMT,
H.PREV_DUE_AMT,H.PYMNT_RECVD_AMT  , H.PYMNT_REVRS_AMT ,
H.BILL_BAL_AMT, H.LATE_PYMNT_CHRG_AMT , H.OCC_AMT,
H.BILL_CURR_AMT , H.BILL_TOT_AMT , H.BILL_30_DAY_AMT,
H.BILL_90_DAY_AMT ,H.BILL_180_DAY_AMT , H.BILL_CYCLE_IND ,
H.BILL_6_MTH_AVG,H.CYC_MTH_YR
FROM
(select distinct * from (
select 
A.*,B.IVR_CALL_ID,B.CALL_START_TM_STMP
FROM 
VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL AS A
LEFT OUTER JOIN 
(SELECT * FROM VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALLS_DRIVER_STRING_SEQ_INT1 WHERE CALL_SEQ=1)AS B
ON A.CUST_ID=B.CUST_ID
AND A.ACCT_NUM=B.ACCT_NUM
AND A.CUST_LINE_SEQ_ID=B.CUST_LINE_SEQ_ID
AND A.MTN=B.MTN
) as A
) as A
LEFT OUTER JOIN
(SELECT
H.CUST_ID,H.ACCT_NUM,H.MTN,H.CUST_LINE_SEQ_ID,
H.BILL_CYCLE_DT , H.PYMNT_DUE_DT, H.FEAT_AMT, H.PREV_DUE_AMT,
H.PYMNT_RECVD_AMT  , H.PYMNT_REVRS_AMT , H.BILL_BAL_AMT,
H.LATE_PYMNT_CHRG_AMT , H.OCC_AMT, H.BILL_CURR_AMT , H.BILL_TOT_AMT ,
H.BILL_30_DAY_AMT, H.BILL_90_DAY_AMT , H.BILL_180_DAY_AMT ,
H.BILL_CYCLE_IND , H.BILL_6_MTH_AVG,H.CYC_MTH_YR
FROM
(SELECT H.*
FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_BILL_SUMMARY H
WHERE CYC_MTH_YR='202001') AS H) AS H
ON A.CUST_ID =H.CUST_ID
AND A.ACCT_NUM = H.ACCT_NUM
AND A.MTN =H.MTN
where  H.BILL_CYCLE_DT < current_date()
) AS A
) AS A
WHERE BILL_SEQ=1;

Comments: previous month billing column details for the mtn to be used if the current month billing info is not available (null)
----------------------------------------------------------------------------------------------
DROP TABLE  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS_PREV_MTH;

CREATE  TABLE  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS_PREV_MTH
AS
SELECT A.* FROM (
SELECT A.*,
ROW_NUMBER() OVER (PARTITION BY  A.CUST_ID,A.ACCT_NUM,A.MTN ORDER BY  A.TRANS_DT DESC) AS BILL_SEQ
FROM (
SELECT
A.CUST_ID,A.ACCT_NUM,A.MTN,H.CUST_LINE_SEQ_ID,
A.IVR_CALL_ID,A.CALL_START_TM_STMP ,
H.OCC_CDV ,
H.OCC_AMTV, H.OCC_TYPE_CDV, H.OCC_DESC ,H.occ_reasons,
H.TRANS_DT,H.AGG_OCC_VALUE,H.CYC_MTH_YR
FROM
(select distinct * from (
select 
A.*,B.IVR_CALL_ID,B.CALL_START_TM_STMP
FROM 
VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL AS A
LEFT OUTER JOIN 
(SELECT * FROM VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALLS_DRIVER_STRING_SEQ_INT1 WHERE CALL_SEQ=1)AS B
ON A.CUST_ID=B.CUST_ID
AND A.ACCT_NUM=B.ACCT_NUM
AND A.CUST_LINE_SEQ_ID=B.CUST_LINE_SEQ_ID
AND A.MTN=B.MTN
) as A
) as A
LEFT OUTER JOIN
(SELECT
H.CUST_ID,H.ACCT_NUM,H.MTN,H.CUST_LINE_SEQ_ID,
H.BILL_CYCLE_DT ,
H.OCC_CDV ,
H.OCC_AMTV,
H.OCC_TYPE_CDV,
H.OCC_DESC ,H.AGG_OCC_VALUE,H.CYC_MTH_YR,
CASE WHEN lower(H.occ_desc) like '%TRAVELPASS%' THEN 'occ_trvlpass'
                when lower(H.occ_desc) like '%intl trv%' or lower(H.occ_desc) like '%intl call%' or lower(H.occ_desc) like '%int tvl%' or  lower(H.occ_desc) like '%international%' then 'International_charges'
                when lower(H.occ_desc) like '%can%' or lower(H.occ_desc) like'%mex%' or lower(H.occ_desc) like '%can/mex%' or lower(H.occ_desc) like '%cn/mx%' then 'CAN_MEX_CHARGES'
                when lower(H.occ_desc) like '%roam%' then 'ROAMING'
                when lower(H.occ_desc) like '%int%' or lower(H.occ_desc) like '%high speed%' then 'data_usg_charges'
                else 'General_reasons' end as occ_reasons,
H.TRANS_DT
FROM
(SELECT H.*
FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_BILL_SUMMARY H
WHERE CYC_MTH_YR='202001')AS H ) as H
ON A.CUST_ID =H.CUST_ID
AND A.ACCT_NUM = H.ACCT_NUM
AND A.MTN =H.MTN
where  H.TRANS_DT < current_date()
) AS A
) AS A
WHERE BILL_SEQ=1;

Comments:previous month occ column details for the mtn to be used if the current month occ info is not available (null)
--------------------------------------------------------------------------------------------------------------

DROP TABLE  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS_PREV_2MTH;

CREATE  TABLE  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS_PREV_2MTH
AS
SELECT A.* FROM (
SELECT A.*,
ROW_NUMBER() OVER (PARTITION BY  A.CUST_ID,A.ACCT_NUM,A.MTN ORDER BY  A.BILL_CYCLE_DT DESC) AS BILL_SEQ
FROM (
SELECT
A.CUST_ID,A.ACCT_NUM,H.CUST_LINE_SEQ_ID,
A.MTN, A.IVR_CALL_ID,A.CALL_START_TM_STMP ,
H.BILL_CYCLE_DT , H.PYMNT_DUE_DT, H.FEAT_AMT,
H.PREV_DUE_AMT,H.PYMNT_RECVD_AMT  , H.PYMNT_REVRS_AMT ,
H.BILL_BAL_AMT, H.LATE_PYMNT_CHRG_AMT , H.OCC_AMT,
H.BILL_CURR_AMT , H.BILL_TOT_AMT , H.BILL_30_DAY_AMT,
H.BILL_90_DAY_AMT ,H.BILL_180_DAY_AMT , H.BILL_CYCLE_IND ,
H.BILL_6_MTH_AVG,H.CYC_MTH_YR
FROM
(select distinct * from (
select 
A.*,B.IVR_CALL_ID,B.CALL_START_TM_STMP
FROM 
VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL AS A
LEFT OUTER JOIN 
(SELECT * FROM VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALLS_DRIVER_STRING_SEQ_INT1 WHERE CALL_SEQ=1)AS B
ON A.CUST_ID=B.CUST_ID
AND A.ACCT_NUM=B.ACCT_NUM
AND A.CUST_LINE_SEQ_ID=B.CUST_LINE_SEQ_ID
AND A.MTN=B.MTN
) as A
) as A
LEFT OUTER JOIN
(SELECT
H.CUST_ID,H.ACCT_NUM,H.MTN,H.CUST_LINE_SEQ_ID,
H.BILL_CYCLE_DT , H.PYMNT_DUE_DT, H.FEAT_AMT, H.PREV_DUE_AMT,
H.PYMNT_RECVD_AMT  , H.PYMNT_REVRS_AMT , H.BILL_BAL_AMT,
H.LATE_PYMNT_CHRG_AMT , H.OCC_AMT, H.BILL_CURR_AMT , H.BILL_TOT_AMT ,
H.BILL_30_DAY_AMT, H.BILL_90_DAY_AMT , H.BILL_180_DAY_AMT ,
H.BILL_CYCLE_IND , H.BILL_6_MTH_AVG,H.CYC_MTH_YR
FROM
(SELECT H.*
FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_BILL_SUMMARY H
WHERE CYC_MTH_YR='201912') AS H) AS H
ON A.CUST_ID =H.CUST_ID
AND A.ACCT_NUM = H.ACCT_NUM
AND A.MTN =H.MTN
where  H.BILL_CYCLE_DT < current_date()
) AS A
) AS A
WHERE BILL_SEQ=1;


COMMENTS: month-2 billing column details for the mtn to be used if even the previous month billing info is not available (null)
------------------------------------------------------------------------------------------------------------


DROP TABLE  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS_PREV_2MTH;

CREATE  TABLE  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS_PREV_2MTH
AS
SELECT A.* FROM (
SELECT A.*,
ROW_NUMBER() OVER (PARTITION BY  A.CUST_ID,A.ACCT_NUM,A.MTN ORDER BY  A.TRANS_DT DESC) AS BILL_SEQ
FROM (
SELECT
A.CUST_ID,A.ACCT_NUM,A.MTN,H.CUST_LINE_SEQ_ID,
A.IVR_CALL_ID,A.CALL_START_TM_STMP ,
H.OCC_CDV ,
H.OCC_AMTV, H.OCC_TYPE_CDV, H.OCC_DESC ,H.occ_reasons,
H.TRANS_DT,H.AGG_OCC_VALUE,H.CYC_MTH_YR
FROM
(select distinct * from (
select 
A.*,B.IVR_CALL_ID,B.CALL_START_TM_STMP
FROM 
VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL AS A
LEFT OUTER JOIN 
(SELECT * FROM VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALLS_DRIVER_STRING_SEQ_INT1 WHERE CALL_SEQ=1)AS B
ON A.CUST_ID=B.CUST_ID
AND A.ACCT_NUM=B.ACCT_NUM
AND A.CUST_LINE_SEQ_ID=B.CUST_LINE_SEQ_ID
AND A.MTN=B.MTN
) as A
) as A
LEFT OUTER JOIN
(SELECT
H.CUST_ID,H.ACCT_NUM,H.MTN,H.CUST_LINE_SEQ_ID,
H.BILL_CYCLE_DT ,
H.OCC_CDV ,
H.OCC_AMTV,
H.OCC_TYPE_CDV,
H.OCC_DESC ,H.AGG_OCC_VALUE,H.CYC_MTH_YR,
CASE WHEN lower(H.occ_desc) like '%TRAVELPASS%' THEN 'occ_trvlpass'
                when lower(H.occ_desc) like '%intl trv%' or lower(H.occ_desc) like '%intl call%' or lower(H.occ_desc) like '%int tvl%' or  lower(H.occ_desc) like '%international%' then 'International_charges'
                when lower(H.occ_desc) like '%can%' or lower(H.occ_desc) like'%mex%' or lower(H.occ_desc) like '%can/mex%' or lower(H.occ_desc) like '%cn/mx%' then 'CAN_MEX_CHARGES'
                when lower(H.occ_desc) like '%roam%' then 'ROAMING'
                when lower(H.occ_desc) like '%int%' or lower(H.occ_desc) like '%high speed%' then 'data_usg_charges'
                else 'General_reasons' end as occ_reasons,
H.TRANS_DT
FROM
(SELECT H.*
FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_BILL_SUMMARY H
WHERE CYC_MTH_YR='201912')AS H ) as H
ON A.CUST_ID =H.CUST_ID
AND A.ACCT_NUM = H.ACCT_NUM
AND A.MTN =H.MTN
where  H.TRANS_DT < current_date()
) AS A
) AS A
WHERE BILL_SEQ=1;


COMMENTS: month-2 occ column details for the mtn to be used if even the previous month occ info is not available (null)
-------------------------------------------------------------------------------------------------------------------

DROP TABLE  VZW_SOI_PRD_TBLS.ITP_INTER_DLY_called_FINAL ;

CREATE  TABLE  VZW_SOI_PRD_TBLS.ITP_INTER_DLY_called_FINAL 
AS 
SELECT DISTINCT 
A.CUST_ID ,A.ACCT_NUM ,A.MTN , 
A.CUST_LINE_SEQ_ID, 
F.ETHNICITY_SEGMT  AS ETHNICITY, 
YEAR (CURRENT_DATE ) -E.BIRTH_YEAR AS AGE, 
E.CUST_ESTB_DT , 
E.PPLAN_EFF_DT , 
E.LINE_ACT_DT , 
E.MTN_ACT_DT , 
E.LINE_TERM_DT , 
E.CNTRCT_TERM_DT, 
E.BIRTH_YEAR , 
E.PPLAN_CD , 
E.PPLAN_TYPE_CD , 
E.PPLAN_DESC , 
E.ACCESS_AMT , 
E.DATA_ACCESS_AMT , 
E.ANLG_DGTL_IND , 
E.CNTRCT_TERM_IND , 
E.PREPAID_IND , 
E.PPLAN_BNDL_TYPE_CD , 
E.BI_PPLAN_DESC , 
E.BI_PPLAN_DESC_ABBRV , 
E.BI_PPLAN_SERVICE_TYPE_DESC , 
E.BI_PPLAN_TYPE_DESC , 
E.BI_PPLAN_CTGRY_DESC , 
E.BI_DATA_ALLOW_TIER_VALUE , 
E.BI_DATA_ALLOW_TIER_UNIT_MEAS , 
E.BI_RPT_PPLAN_DESC , 
E.MSG_ALLOW_SHARE_IND, 
E.DATA_ALLOW_SHARE_IND , 
E.VOICE_ALLOW_SHARE_IND , 
E.ACTIVITY_CD , 
E.svc_prod_id1 , 
E.svc_prod_desc1 , 
E.SVC_PROD_ID2 , 
E.SVC_PROD_DESC2 ,
E.SVC_PROD_ID3 , 
E.SVC_PROD_DESC3 ,
E.mtrans_ts1,
E.mtrans_ts2,
E.mtrans_ts3,
CASE WHEN LOWER(E.SVC_PROD_DESC1) LIKE '%1mo%' OR LOWER(E.SVC_PROD_DESC1) LIKE '%month%' THEN 'MONTHLY' 
WHEN LOWER(E.SVC_PROD_DESC1) LIKE '%canada%' OR LOWER(E.SVC_PROD_DESC1) LIKE '%mex%' THEN 'INCLUDED' 
WHEN LOWER(E.SVC_PROD_DESC1) LIKE '%high%' OR LOWER(E.SVC_PROD_DESC1) LIKE '%speed%' THEN 'HIGH_SPEED_DATA' 
ELSE 'DAILY' END AS TP_TYPE1,
CASE WHEN LOWER(E.SVC_PROD_DESC2) LIKE '%1mo%' OR LOWER(E.SVC_PROD_DESC2) LIKE '%month%' THEN 'MONTHLY' 
WHEN LOWER(E.SVC_PROD_DESC2) LIKE '%canada%' OR LOWER(E.SVC_PROD_DESC2) LIKE '%mex%' THEN 'INCLUDED' 
WHEN LOWER(E.SVC_PROD_DESC2) LIKE '%high%' OR LOWER(E.SVC_PROD_DESC2) LIKE '%speed%' THEN 'HIGH_SPEED_DATA' 
ELSE 'DAILY' END AS TP_TYPE2,
CASE WHEN LOWER(E.SVC_PROD_DESC3) LIKE '%1mo%' OR LOWER(E.SVC_PROD_DESC3) LIKE '%month%' THEN 'MONTHLY' 
WHEN LOWER(E.SVC_PROD_DESC3) LIKE '%canada%' OR LOWER(E.SVC_PROD_DESC3) LIKE '%mex%' THEN 'INCLUDED' 
WHEN LOWER(E.SVC_PROD_DESC3) LIKE '%high%' OR LOWER(E.SVC_PROD_DESC3) LIKE '%speed%' THEN 'HIGH_SPEED_DATA' 
ELSE 'DAILY' END AS TP_TYPE3,
E.svc_prod_chrg_amt1 , 
E.svc_prod_treat_cd1 , 
E.max_svc_prod_eff_dt1,
case when E.svc_prod_id1 IN ('383', '1344','1252','1107', '1115', '1081','427','428','441','434','443','442','446','426','425','424', 
'1324','1327','445','444','423','422','1328','1328','1329','1329','1324','1327','412','431','432','433','1195', '1198','384','683','1045') THEN 'Paid' 
when E.svc_prod_id1 IN ('691', '988', '1255','1046', '692', '987', '1256') 
AND E.BI_PPLAN_DESC IN 
('GO UNLIMITED','beyond UNLIMITED','ABOVE UNLIMITED (SMARTPHONE)') 
THEN 'Free' 
ELSE 'PAID' 
END AS FREE_PLAN, 
E.line_type, 
E.age_group, 
E.prod_nm, 
E.device_prod_nm, 
E.device_type_cd, 
E.device_brand_nm, 
CASE WHEN LOWER(E.DEVICE_BRAND_NM) LIKE '%iphone%'  THEN 'IPHONE' 
WHEN LOWER(E.DEVICE_BRAND_NM) LIKE '%samsung%' OR LOWER(DEVICE_BRAND_NM) LIKE '%galaxy%' THEN 'SAMSUNG' 
WHEN LOWER(E.DEVICE_BRAND_NM) LIKE '%moto%'  THEN 'MOTOROLA' 
WHEN LOWER(E.DEVICE_BRAND_NM) LIKE '%lg%'  THEN 'LG'
WHEN LOWER(E.DEVICE_BRAND_NM) LIKE '%pixel%'  THEN 'PIXEL'
ELSE 'OTHERS' END AS DEVICE_TYPE,
E.device_compat, 
E.byod_flag, 
E.vz_device, 
E.tvl_pass_included, 
E.can_mex_free_plan, 
E.region_desc, 
E.adults_in_hshld, 
E.marital_status, 
E.child_in_hshld, 
E.gender_input, 
E.presence_young_adult, 
E.presence_sr_adult, 
E.internet_user_ind, 
E.hshld_size, 
E.religious_desc, 
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_CYCLE_DT ELSE  H.BILL_CYCLE_DT END AS  BILL_CYCLE_DT ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.PYMNT_DUE_DT ELSE H.PYMNT_DUE_DT END AS PYMNT_DUE_DT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.FEAT_AMT ELSE H.FEAT_AMT END AS FEAT_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.PREV_DUE_AMT ELSE H.PREV_DUE_AMT END AS  PREV_DUE_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.PYMNT_RECVD_AMT   ELSE H.PYMNT_RECVD_AMT END AS PYMNT_RECVD_AMT  ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.PYMNT_REVRS_AMT ELSE H.PYMNT_REVRS_AMT END AS  PYMNT_REVRS_AMT ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_BAL_AMT  ELSE H.BILL_BAL_AMT END AS  BILL_BAL_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.LATE_PYMNT_CHRG_AMT  ELSE H.LATE_PYMNT_CHRG_AMT END AS LATE_PYMNT_CHRG_AMT ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.OCC_AMT  ELSE H.OCC_AMT END AS  OCC_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_CURR_AMT ELSE H.BILL_CURR_AMT END AS BILL_CURR_AMT ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_TOT_AMT ELSE H.BILL_TOT_AMT END AS BILL_TOT_AMT ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_30_DAY_AMT ELSE H.BILL_30_DAY_AMT END AS  BILL_30_DAY_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_90_DAY_AMT ELSE H.BILL_90_DAY_AMT END AS BILL_90_DAY_AMT ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_180_DAY_AMT ELSE H.BILL_180_DAY_AMT END AS BILL_180_DAY_AMT ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_CYCLE_IND ELSE H.BILL_CYCLE_IND END AS BILL_CYCLE_IND ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  L.BILL_6_MTH_AVG ELSE H.BILL_6_MTH_AVG END AS  BILL_6_MTH_AVG,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  LO.OCC_CDV ELSE HO.OCC_CDV END AS OCC_CDV ,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  LO.OCC_AMTV  ELSE HO.OCC_AMTV END AS  OCC_AMTV,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  LO.OCC_TYPE_CDV ELSE HO.OCC_TYPE_CDV END AS  OCC_TYPE_CDV,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  LO.OCC_DESC ELSE HO.OCC_DESC END AS OCC_DESC_REF ,
CASE WHEN HO.TRANS_DT IS NULL THEN  LO.OCC_REASONS ELSE HO.OCC_REASONS END AS OCC_REASONS,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  LO.TRANS_DT  ELSE  HO.TRANS_DT     END  AS TRANS_DT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  LO.AGG_OCC_VALUE   ELSE  HO.AGG_OCC_VALUE    END  AS AGG_OCC_VALUE,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  LO.CYC_MTH_YR   ELSE  HO.CYC_MTH_YR   END  AS CYC_MTH_YR,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_CYCLE_DT ELSE L.BILL_CYCLE_DT END   AS PREV_BILL_CYCLE_DT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.PYMNT_DUE_DT ELSE L.PYMNT_DUE_DT    END  AS  PREV_PYMNT_DUE_DT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.FEAT_AMT   ELSE   L.FEAT_AMT    END  AS PREV_FEAT_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.PREV_DUE_AMT    ELSE  L.PREV_DUE_AMT   END  AS PREV_PREV_DUE_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.PYMNT_RECVD_AMT    ELSE  L.PYMNT_RECVD_AMT    END  AS PREV_PYMNT_RECVD_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.PYMNT_REVRS_AMT   ELSE  L.PYMNT_REVRS_AMT    END  AS PREV_PYMNT_REVRS_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_BAL_AMT  ELSE   L.BILL_BAL_AMT  END   AS PREV_BILL_BAL_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.LATE_PYMNT_CHRG_AMT   ELSE   L.LATE_PYMNT_CHRG_AMT   END  AS PREV_LATE_PYMNT_CHRG_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.OCC_AMT    ELSE  L.OCC_AMT   END  AS PREV_OCC_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_CURR_AMT   ELSE  L.BILL_CURR_AMT   END  AS PREV_BILL_CURR_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_TOT_AMT   ELSE   L.BILL_TOT_AMT   END  AS PREV_BILL_TOT_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_30_DAY_AMT   ELSE  L.BILL_30_DAY_AMT     END  AS PREV_BILL_30_DAY_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_90_DAY_AMT  ELSE  L.BILL_90_DAY_AMT    END  AS PREV_BILL_90_DAY_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_180_DAY_AMT   ELSE  L.BILL_180_DAY_AMT   END  AS PREV_BILL_180_DAY_AMT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_CYCLE_IND  ELSE  L.BILL_CYCLE_IND   END   AS PREV_BILL_CYCLE_IND,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  N.BILL_6_MTH_AVG   ELSE  L.BILL_6_MTH_AVG   END  AS PREV_BILL_6_MTH_AVG,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  NP.OCC_CDV   ELSE  LO.OCC_CDV    END  AS PREV_OCC_CDV,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  NP.OCC_AMTV   ELSE LO.OCC_AMTV    END  AS PREV_OCC_AMTV,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  NP.OCC_TYPE_CDV   ELSE LO.OCC_TYPE_CDV    END  AS PREV_OCC_TYPE_CDV,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  NP.OCC_DESC  ELSE LO.OCC_DESC    END   AS PREV_OCC_DESC,
CASE WHEN HO.TRANS_DT IS NULL THEN  NP.OCC_REASONS ELSE LO.OCC_REASONS END AS PREV_OCC_REASONS,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  NP.TRANS_DT  ELSE  LO.TRANS_DT     END  AS PREV_TRANS_DT,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  NP.AGG_OCC_VALUE   ELSE  LO.AGG_OCC_VALUE    END  AS PREV_AGG_OCC_VALUE,
CASE WHEN H.CYC_MTH_YR IS NULL THEN  NP.CYC_MTH_YR   ELSE  LO.CYC_MTH_YR   END  AS PREV_CYC_MTH_YR,
I.total_data_allow, 
I.plan_data_allow, 
I.bonus_data_allow, 
I.sls_outlet_id, 
I.tenure, 
I.true_plan_data_allow, 
I.true_bonus_data_allow, 
I.gift_data_allow, 
I.true_total_data_allow, 
I.over_used, 
I.avgg, 
I.thsld, 
I.data_threshold, 
A.TVL1 ,A.TVL2 ,A.TVL3 ,A.TVL4,A.TVL5,
A.TVL6 ,A.TVL7 ,A.TVL8 ,A.TVL9,
A.TVL10,A.CCD1 ,A.CCD2 ,A.CCD3 ,A.CCD4 ,A.CCD5 , 
A.CCD6 ,A.CCD7 ,A.CCD8 ,A.CCD9 ,A.CCD10 , 
A.CALL_TS1,  A.CALL_TS2 ,A. CALL_TS3, 
A.CALL_TS4 ,A.CALL_TS5,A.CALL_TS6,A.CALL_TS7, 
A. CALL_TS8,   A.CALL_TS9  ,A.CALL_TS10 , 
A.IVR_CALL_ID1,A.IVR_CALL_ID2,A.IVR_CALL_ID3,A.IVR_CALL_ID4,
A.IVR_CALL_ID5,A.IVR_CALL_ID6, A.IVR_CALL_ID7,A.IVR_CALL_ID8,
A.IVR_CALL_ID9,A.IVR_CALL_ID10, 
CONCAT_WS('|',A.CCD1,A.CCD2,A.CCD3,A.CCD4,A.CCD5,A.CCD6,A.CCD7,A.CCD8,A.CCD9,A.CCD10) AS COUNTRY_CD_COMBO 
,A.PREV_TVL_COUNT
,A.PREV_CALL_COUNT
,P.CRUISE_TRAVEL_COUNT
,M.MSG_DATE
,M.MSG_TIMESTAMP
,M.TOPIC
,M.ALERT_TYPE
,A2.PRIMARY1_TOPIC as Primary1_topic
,A2.SECONDARY1_TOPIC as secondary1_topic
,A3.PRIMARY2_TOPIC as Primary2_topic
,A3.SECONDARY2_TOPIC as secondary2_topic
,A4.PRIMARY3_TOPIC as Primary3_topic
,A4.SECONDARY3_TOPIC as secondary3_topic
,A5.PRIMARY4_TOPIC as Primary4_topic
,A5.SECONDARY4_TOPIC as secondary4_topic
,A6.PRIMARY5_TOPIC as Primary5_topic
,A6.SECONDARY5_TOPIC as secondary5_topic
,A7.PRIMARY6_TOPIC as Primary6_topic
,A7.SECONDARY6_TOPIC as secondary6_topic
,A8.PRIMARY7_TOPIC as Primary7_topic
,A8.SECONDARY7_TOPIC as secondary7_topic
,A9.PRIMARY8_TOPIC as Primary8_topic
,A9.SECONDARY8_TOPIC as secondary8_topic
,A10.PRIMARY9_TOPIC as Primary9_topic
,A10.SECONDARY9_TOPIC as secondary9_topic
,A11.PRIMARY10_TOPIC as Primary10_topic
,A11.SECONDARY10_TOPIC as secondary10_topic
FROM 
(select distinct * from (
select 
 A.*,B.IVR_CALL_ID,B.CALL_START_TM_STMP
FROM 
VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL AS A
LEFT OUTER JOIN 
(SELECT * FROM VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALLS_DRIVER_STRING_SEQ_INT1 WHERE CALL_SEQ=1)AS B
ON A.CUST_ID=B.CUST_ID
AND A.ACCT_NUM=B.ACCT_NUM
AND A.CUST_LINE_SEQ_ID=B.CUST_LINE_SEQ_ID
AND A.MTN=B.MTN)
AS A
) as a
LEFT OUTER JOIN (select * from (
select a.*,
ROW_NUMBER() OVER(partition by cust_id,mtn,acct_num,cust_line_seq_id order by cust_estb_dt desc) as rn
from
VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_CUSTOMER_PROFILE as a
)as a where rn =1 ) AS E 
ON A.CUST_ID =E.CUST_ID 
AND A.ACCT_NUM = E.ACCT_NUM 
AND A.MTN =E.MTN 
AND A.CUST_LINE_SEQ_ID =E.CUST_LINE_SEQ_ID 
LEFT OUTER JOIN
(SELECT * FROM VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS) AS H
ON A.CUST_ID =H.CUST_ID
AND A.ACCT_NUM = H.ACCT_NUM
AND A.MTN =H.MTN
AND E.CUST_LINE_SEQ_ID =H.CUST_LINE_SEQ_ID
LEFT OUTER JOIN
(SELECT * FROM  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS_PREV_MTH ) AS L
ON A.CUST_ID =L.CUST_ID
AND A.ACCT_NUM = L.ACCT_NUM
AND A.MTN =L.MTN
AND E.CUST_LINE_SEQ_ID =L.CUST_LINE_SEQ_ID
LEFT OUTER JOIN
(SELECT * FROM  VZW_SOI_PRD_TBLS.BILLING_COLUMN_DETAILS_PREV_2MTH ) AS N
ON A.CUST_ID =N.CUST_ID
AND A.ACCT_NUM = N.ACCT_NUM
AND A.MTN =N.MTN
AND E.CUST_LINE_SEQ_ID =N.CUST_LINE_SEQ_ID 
LEFT OUTER JOIN
(SELECT * FROM VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS) AS HO
ON A.CUST_ID =HO.CUST_ID
AND A.ACCT_NUM = HO.ACCT_NUM
AND A.MTN =HO.MTN
AND E.CUST_LINE_SEQ_ID =HO.CUST_LINE_SEQ_ID
LEFT OUTER JOIN
(SELECT * FROM  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS_PREV_MTH ) AS LO
ON A.CUST_ID =LO.CUST_ID
AND A.ACCT_NUM = LO.ACCT_NUM
AND A.MTN =LO.MTN
AND E.CUST_LINE_SEQ_ID =LO.CUST_LINE_SEQ_ID
LEFT OUTER JOIN
(SELECT * FROM  VZW_SOI_PRD_TBLS.OCC_COLUMN_DETAILS_PREV_2MTH ) AS NP
ON A.CUST_ID =NP.CUST_ID
AND A.ACCT_NUM = NP.ACCT_NUM
AND A.MTN =NP.MTN
AND E.CUST_LINE_SEQ_ID =NP.CUST_LINE_SEQ_ID
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_CUST_ETHNICITY AS F 
ON A.CUST_ID=F.CUST_ID 
AND A.CUST_LINE_SEQ_ID=F.CUST_LINE_SEQ_ID 
AND A.MTN=F.MTN 
AND A.ACCT_NUM=F.ACCT_NUM 
LEFT OUTER JOIN 
(SELECT *  FROM VZW_SOI_PRD_TBLS.VZSOI_SEMANTIC_DATA_USAGE WHERE CYC_MNTH_YR='2020 1') I
ON A.CUST_ID =I.CUST_ID 
AND A.MTN =I.MTN 
AND A.CUST_LINE_SEQ_ID =I.CUST_LINE_SEQ_ID
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS1 AS A2
ON trim(A.IVR_CALL_ID1)=trim(A2.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS2 AS A3
ON trim(A.IVR_CALL_ID2)=trim(A3.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS3 AS A4
ON trim(A.IVR_CALL_ID3)=trim(A4.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS4 AS A5
ON trim(A.IVR_CALL_ID4)=trim(A5.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS5 AS A6
ON trim(A.IVR_CALL_ID5)=trim(A6.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS6 AS A7
ON trim(A.IVR_CALL_ID6)=trim(A7.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS7 AS A8
ON trim(A.IVR_CALL_ID7)=trim(A8.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS8 AS A9
ON trim(A.IVR_CALL_ID8)=trim(A9.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS9 AS A10
ON trim(A.IVR_CALL_ID9)=trim(A10.IVR_ID)
LEFT OUTER JOIN 
VZW_SOI_PRD_TBLS.ITP_SAD_INTER_DLY_CALL_TVL_TOPICS10 AS A11
ON trim(A.IVR_CALL_ID10)=trim(A11.IVR_ID)
left outer join 
(select cust_id,mtn,acct_num,cust_line_seq_id,count(*) as CRUISE_TRAVEL_COUNT from 
VZW_SOI_PRD_TBLS.ITP_SAD_CUST_DLY_TRAVEL_BASE
where country_cd='CSP'
group by 
cust_id,mtn,acct_num,cust_line_seq_id) as P
on a.cust_id=P.cust_id
and a.mtn=P.mtn
and a.cust_line_seq_id=P.cust_line_seq_id
and a.acct_num=P.acct_num
LEFT OUTER JOIN 
(SELECT A.CUST_ID,A.CUST_LINE_SEQ_ID,A.ACCT_NUM,A.MTN,
A.MSG_DATE,A.MSG_TIMESTAMP,A.TOPIC,A.ALERT_TYPE
FROM VZW_SOI_PRD_TBLS.ITP_SAD_CUST_DLY_ONE_MSG as A
WHERE  MSG_SEQ=1) AS M
ON A.CUST_ID=M.CUST_ID
AND A.MTN=M.MTN
AND E.CUST_LINE_SEQ_ID=M.CUST_LINE_SEQ_ID
AND A.ACCT_NUM=M.ACCT_NUM;

COMMENTS: final table with the same base we have created earlier in table VZW_SOI_PRD_TBLS.ITP_SAD_DLY_CALLS_TRVL_SEQ_FINAL
performing a left outer join on the rest of the tables with other informations related to international travel. 